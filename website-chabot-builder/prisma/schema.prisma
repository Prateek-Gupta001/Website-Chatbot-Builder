//Okay so this is our schema.prisma file right here which we are going to be using .. for 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

//For every chatbot that the user creates ... he or she has to pay atleast 10 dollars a month .. so its not really a plan that they are buying buts its a chatbot.
//Some cron jobs that would be required  
model Users{
  id String @default(auto()) @id @map("_id") @db.ObjectId
  name String
  email String @unique
  image String
  planExpires DateTime
  Chatbots Chatbots[]
  removeWaterMark Boolean @default(false)
  planId String? @db.ObjectId
  plan PricingPlans? @relation(fields: [planId], references: [planId])
  messagesLimit Int @default(0)
}

enum Progress {
  inProgress
  Successful
  Unsucessful
}

model Chatbots{
  chatbotId String @id @default(auto()) @map("_id") @db.ObjectId
  PUBLIC_API_KEY String @unique
  DOMAINS String [] 
  userId String @db.ObjectId
  user Users @relation(fields: [userId], references: [id])
  websiteURL String
  status Progress
  crawlResponse Json
  conversation Conversations[]
  systemPrompt String @default("You are a friendly and helpful assistant. I will provide you with a context and a question. Your job is to answer the question based only on the context provided. \n If the information to answer the question is in the context, please provide a clear and concise answer. \n If the context doesn't have the information needed, just say something like, 'I couldn't find the answer to your question in the documents I have. Please do not try to guess or use any outside information. ")
}

model Conversations{
  conversationId String @id @default(auto()) @map("_id") @db.ObjectId
  chatbotId String @db.ObjectId
  Chatbot Chatbots @relation(fields: [chatbotId], references: [chatbotId])
  messages Json
}

model PricingPlans{
  planId String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  Monthlycost Int 
  linkLimit Int
  documentLimit Int
  messageLimit Int
  users Users[]
}